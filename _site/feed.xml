<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-12-02T21:29:01+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Tu Ba Khuym</title><subtitle>A place where I share my documents and knowledge</subtitle><author><name>Tu Ba Khuym</name></author><entry><title type="html">Tracking Completed Projects with Apple Calendar and Obsidian</title><link href="http://localhost:4000/2024/12/01/tracking-completed-projects-with-apple-and-obsidian.html" rel="alternate" type="text/html" title="Tracking Completed Projects with Apple Calendar and Obsidian" /><published>2024-12-01T00:00:00+07:00</published><updated>2024-12-01T00:00:00+07:00</updated><id>http://localhost:4000/2024/12/01/tracking-completed-projects-with-apple-and-obsidian</id><content type="html" xml:base="http://localhost:4000/2024/12/01/tracking-completed-projects-with-apple-and-obsidian.html"><![CDATA[<iframe width="100%" height="400" src="https://www.youtube.com/embed/7-TeuOACXbY" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>

<p>I like to keep track of my completed projects. It’s satisfying to revisit my calendar and see exactly what I’ve accomplished. This habit helps me stay organized and gives me a sense of completion.</p>

<p>To streamline this, I came up with a solution that connects Obsidian and Apple Calendar. Here’s how I made it work:</p>

<hr />

<h3 id="the-problem-automating-task-tracking">The Problem: Automating Task Tracking</h3>

<p>I wanted two things:</p>
<ol>
  <li><strong>A way to get notified when a task is marked as “Done” in Obsidian.</strong></li>
  <li><strong>Automatically creating a calendar event in Apple Calendar whenever a task is completed.</strong></li>
</ol>

<p>I explored existing Obsidian plugins but couldn’t find one that matched my needs. So, I decided to build a custom solution!</p>

<hr />

<h3 id="my-solution">My Solution</h3>

<h4 id="1-a-custom-obsidian-plugin">1. A Custom Obsidian Plugin</h4>

<p>I created a new plugin to detect when a task is moved to the “Done” section of a specific document in Obsidian.<br />
If you’re curious, you can check out the source code <a href="https://github.com/draphonix/obsidian-applescripts-runner/tree/main">here</a>.</p>

<p>This plugin monitors changes and triggers the next step: adding an event to Apple Calendar.</p>

<hr />

<h4 id="2-adding-events-to-apple-calendar-with-applescript">2. Adding Events to Apple Calendar with AppleScript</h4>

<p>Since I use Apple Calendar, I wrote an AppleScript to create a new calendar event. Here’s the script:</p>

<div class="language-applescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- Define the input</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">input</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="p">{</span><span class="nv">calendarName</span><span class="p">:</span><span class="s2">"Logs"</span><span class="p">,</span><span class="w"> </span><span class="nv">summary</span><span class="p">:</span><span class="s2">"This event is added by AppleScript"</span><span class="p">,</span><span class="w"> </span><span class="nv">description</span><span class="p">:</span><span class="s2">"description"</span><span class="p">}</span><span class="w">

</span><span class="c1">-- Extract input values</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">calendarName</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="nv">calendarName</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="nv">input</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">noteSummary</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="nv">summary</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="nv">input</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">noteDescription</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="nv">description</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="nv">input</span><span class="w">

</span><span class="c1">-- Get the current date and time</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">currentDate</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="p">(</span><span class="nb">current date</span><span class="p">)</span><span class="w">
</span><span class="c1">-- Define event duration (e.g., 1 hour)</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">eventDuration</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="mi">60</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="nv">minutes</span><span class="w">
</span><span class="c1">-- Calculate end date</span><span class="w">
</span><span class="k">set</span><span class="w"> </span><span class="nv">endDate</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="nv">currentDate</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nv">eventDuration</span><span class="w">

</span><span class="c1">-- Construct a new event in the Calendar app</span><span class="w">
</span><span class="k">try</span><span class="w">
    </span><span class="k">tell</span><span class="w"> </span><span class="nb">application</span><span class="w"> </span><span class="s2">"Calendar"</span><span class="w">
        </span><span class="c1">-- Find the desired calendar</span><span class="w">
        </span><span class="k">set</span><span class="w"> </span><span class="nv">targetCalendar</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="nb">first</span><span class="w"> </span><span class="nv">calendar</span><span class="w"> </span><span class="nb">whose</span><span class="w"> </span><span class="na">name</span><span class="w"> </span><span class="ow">is</span><span class="w"> </span><span class="nv">calendarName</span><span class="w">
        </span><span class="c1">-- Create a new event with all properties set</span><span class="w">
        </span><span class="k">set</span><span class="w"> </span><span class="nv">newEvent</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="nb">make</span><span class="w"> </span><span class="nb">new</span><span class="w"> </span><span class="nb">event</span><span class="w"> </span><span class="nb">at</span><span class="w"> </span><span class="k">end</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="nb">events</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="nv">targetCalendar</span><span class="w"> </span><span class="nv">with</span><span class="w"> </span><span class="na">properties</span><span class="w"> </span><span class="p">{</span><span class="nv">summary</span><span class="p">:</span><span class="nv">noteSummary</span><span class="p">,</span><span class="w"> </span><span class="nv">description</span><span class="p">:</span><span class="nv">noteDescription</span><span class="p">,</span><span class="w"> </span><span class="nb">start</span><span class="w"> </span><span class="nv">date</span><span class="p">:</span><span class="nv">currentDate</span><span class="p">,</span><span class="w"> </span><span class="k">end</span><span class="w"> </span><span class="nv">date</span><span class="p">:</span><span class="nv">endDate</span><span class="p">}</span><span class="w">
    </span><span class="k">end</span><span class="w"> </span><span class="k">tell</span><span class="w">
    </span><span class="nb">return</span><span class="w"> </span><span class="s2">"New event created successfully: "</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="nv">noteSummary</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="s2">" - "</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="nv">noteDescription</span><span class="w">
</span><span class="k">on</span> <span class="k">error</span><span class="w"> </span><span class="nv">errMsg</span><span class="w"> </span><span class="nv">number</span><span class="w"> </span><span class="nv">errNum</span><span class="w">
    </span><span class="nb">return</span><span class="w"> </span><span class="s2">"Failed to create event. Error: "</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="nv">errMsg</span><span class="w">
</span><span class="k">end</span><span class="w"> </span><span class="k">try</span><span class="w">
</span></code></pre></div></div>

<p>This script creates a calendar event in a specified calendar (in my case, “Logs”). The event includes a summary, description, start time, and end time.</p>

<hr />
<h3 id="reflection">Reflection</h3>

<p>Building this system was a fun little adventure! There’s always room for improvement in both the AppleScript and the plugin, but I’m happy with the results so far.</p>

<p>If you’ve tackled similar problems or have tips for better automation, I’d love to hear about them! Let’s share and learn together.</p>

<p>This setup not only keeps my project tracking smooth but also motivates me to keep checking off tasks. Hope this inspires you to automate some of your workflows!</p>]]></content><author><name>Tu Ba Khuym</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Local Development Guide</title><link href="http://localhost:4000/blog/2024/11/26/local-development-guide.html" rel="alternate" type="text/html" title="Local Development Guide" /><published>2024-11-26T00:00:00+07:00</published><updated>2024-11-26T00:00:00+07:00</updated><id>http://localhost:4000/blog/2024/11/26/local-development-guide</id><content type="html" xml:base="http://localhost:4000/blog/2024/11/26/local-development-guide.html"><![CDATA[<h1 id="local-development-guide">Local Development Guide</h1>

<p>This guide will help you set up your local development environment for contributing to this blog.</p>

<h2 id="prerequisites">Prerequisites</h2>

<p>Before you begin, ensure you have the following tools installed on your macOS system:</p>

<h3 id="1-install-homebrew">1. Install Homebrew</h3>

<p>If you haven’t installed Homebrew yet, run the following command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/bash <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<h3 id="2-install-ruby">2. Install Ruby</h3>

<p>Install Ruby using Homebrew:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>ruby
</code></pre></div></div>

<h3 id="3-configure-ruby-path">3. Configure Ruby Path</h3>

<p>Add Ruby to your PATH by adding these lines to your shell configuration file:</p>

<p>For Zsh (<code class="language-plaintext highlighter-rouge">~/.zshrc</code>):</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"/opt/homebrew/opt/ruby/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div></div>

<p>Then reload your configuration:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> ~/.zshrc
</code></pre></div></div>

<h3 id="4-verify-installation">4. Verify Installation</h3>

<p>Ensure Ruby is properly installed:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>which ruby  <span class="c"># Should point to Homebrew's Ruby</span>
ruby <span class="nt">-v</span>    <span class="c"># Should show Ruby version 3.x.x</span>
</code></pre></div></div>

<h2 id="blog-setup">Blog Setup</h2>

<p>Follow these steps to set up the blog locally:</p>

<h3 id="1-clone-repository">1. Clone Repository</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone <span class="o">[</span>repository-url]
<span class="nb">cd</span> <span class="o">[</span>repository-name]
</code></pre></div></div>

<h3 id="2-install-dependencies">2. Install Dependencies</h3>

<p>Install Bundler and project dependencies:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>bundler
bundle <span class="nb">install</span>
</code></pre></div></div>

<h3 id="3-start-development-server">3. Start Development Server</h3>

<p>Launch the Jekyll development server:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<p>The blog will be available at <a href="http://localhost:4000">http://localhost:4000</a></p>

<h2 id="troubleshooting-guide">Troubleshooting Guide</h2>

<p>If you encounter any issues during setup, try these solutions:</p>

<h3 id="common-issues">Common Issues</h3>

<ol>
  <li><strong>Permission Errors</strong>
    <ul>
      <li>Verify you’re using Homebrew’s Ruby instead of the system Ruby</li>
      <li>Check Ruby path with <code class="language-plaintext highlighter-rouge">which ruby</code></li>
    </ul>
  </li>
  <li><strong>Bundler Failures</strong>
    <ul>
      <li>Remove <code class="language-plaintext highlighter-rouge">Gemfile.lock</code>: <code class="language-plaintext highlighter-rouge">rm Gemfile.lock</code></li>
      <li>Reinstall dependencies: <code class="language-plaintext highlighter-rouge">bundle install</code></li>
    </ul>
  </li>
  <li><strong>Gem Issues</strong>
    <ul>
      <li>Reset all gems: <code class="language-plaintext highlighter-rouge">gem pristine --all</code></li>
    </ul>
  </li>
</ol>]]></content><author><name>Tu Ba Khuym</name></author><category term="blog" /><category term="setup" /><category term="development" /><category term="guide" /><summary type="html"><![CDATA[Local Development Guide]]></summary></entry><entry><title type="html">Welcome to My Blog</title><link href="http://localhost:4000/2024/01/26/welcome-to-my-blog.html" rel="alternate" type="text/html" title="Welcome to My Blog" /><published>2024-01-26T22:00:00+07:00</published><updated>2024-01-26T22:00:00+07:00</updated><id>http://localhost:4000/2024/01/26/welcome-to-my-blog</id><content type="html" xml:base="http://localhost:4000/2024/01/26/welcome-to-my-blog.html"><![CDATA[<p>Welcome to my blog! This is where I’ll be sharing my experiences and knowledge about server engineering, mobile game development, and various technical topics.</p>

<h2 id="what-to-expect">What to Expect</h2>

<p>I’ll be writing about:</p>
<ul>
  <li>Server architecture and optimization</li>
  <li>Mobile game development</li>
  <li>Performance tuning</li>
  <li>Tools and automation</li>
  <li>Best practices and lessons learned</li>
</ul>

<p>Stay tuned for more content!</p>]]></content><author><name>Tu Ba Khuym</name></author><summary type="html"><![CDATA[Welcome to my blog! This is where I’ll be sharing my experiences and knowledge about server engineering, mobile game development, and various technical topics.]]></summary></entry></feed>